"""Add multiple tables and columns with constraints

Revision ID: 674fcdbfbe0e
Revises: c6f288c1b7de
Create Date: 2025-01-17 08:04:49.301442

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '674fcdbfbe0e'
down_revision = 'c6f288c1b7de'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=300), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['managers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agent_task',
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('agent_id', 'task_id')
    )
    op.create_table('chats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['managers.id'], ),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_id')
    )
    op.create_table('scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_id', 'user_id', name='unique_user_report_score')
    )
    op.create_table('task_report',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('task_id', 'report_id')
    )
    op.create_table('task_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('agents', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['user_id'])

    with op.batch_alter_table('managers', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['user_id'])

    with op.batch_alter_table('organisations', schema=None) as batch_op:
        batch_op.drop_constraint('fk_organisation_owner_id', type_='foreignkey')
        batch_op.create_foreign_key('fk_organisation_owner_id', 'users', ['owner_id'], ['uid'], ondelete='SET NULL')

    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.add_column(sa.Column('average_score', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('status', sa.String(length=50), nullable=False))
        batch_op.drop_column('is_approved')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('home_address', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('is_banned', sa.Boolean(), nullable=True))
        batch_op.drop_column('last_location')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Revert changes to the 'users' table
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_location', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.drop_column('is_banned')
        batch_op.drop_column('home_address')

    # Revert changes to the 'reports' table
    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_approved', sa.BOOLEAN(), autoincrement=False, nullable=False))
        batch_op.drop_column('status')
        batch_op.drop_column('average_score')

    # Drop added tables
    op.drop_table('messages')
    op.drop_table('task_requests')
    op.drop_table('task_report')
    op.drop_table('scores')
    op.drop_table('chats')
    op.drop_table('agent_task')
    op.drop_table('tasks')
    # ### end Alembic commands ###
